Implement a Huffman coding and decoding program which supports the following options. Assume your
program is called HuffCode.
• ./HuffCode -c inputfile -m mapfile -o outputfile
You may assume that all characters in the file inputfile are printable however, do not assume any other
restrictions on the set of characters or the length of the file. Given such a text file your program should
output the following:
1. A file mapfile containing for every character its frequency in the input file and the corresponding
Huffman code generated by your algorithm. Sort the output based on frequency of the character.
Your file should contain lines of this format:
character frequency code
A
45
0
H
9
1101
?
5
1100
2. A file outputfile containing the Huffman code for each character in the input file. For example, if
the input file contains “AH?” and the Huffman code for the characters is as shown above, then
the outputfile contains “011011100”.
Note that if you directly compare the sizes of inputfile and outputfile, it is very likely that outputfile
has a size larger than inputfile.
• ./HuffCode -d codefile -m mapfile -o decodedfile
Given a codefile generated by your program (which contains the ASCII code written as stated above)
and the mapfile denoting the code you should decode the file and reconstruct the original inputfile.
The output generated by your program should be written to file named decodedfile.
